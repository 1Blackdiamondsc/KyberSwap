const abiDecoder = require('abi-decoder'); 

const testABI = [{"constant":true,"inputs":[{"name":"x","type":"bytes14"},{"name":"byteInd","type":"uint256"}],"name":"getInt8FromByte","outputs":[{"name":"","type":"int8"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"reserve","type":"address"},{"name":"tokens","type":"address[]"}],"name":"getBalances","outputs":[{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"ratesContract","type":"address"},{"name":"tokenList","type":"address[]"}],"name":"getTokenIndicies","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"reserve","type":"address"},{"name":"srcs","type":"address[]"},{"name":"dests","type":"address[]"}],"name":"getReserveRate","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"x","type":"bytes14"},{"name":"byteInd","type":"uint256"}],"name":"getByteFromBytes14","outputs":[{"name":"","type":"bytes1"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"network","type":"address"},{"name":"srcs","type":"address[]"},{"name":"dests","type":"address[]"},{"name":"qty","type":"uint256[]"}],"name":"getExpectedRates","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"ratesContract","type":"address"},{"name":"tokenList","type":"address[]"}],"name":"getTokenRates","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"uint256[]"},{"name":"","type":"int8[]"},{"name":"","type":"int8[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"}]

abiDecoder.addABI(testABI);

const testData = "0xf1838fe4000000000000000000000000818e6fecd516ecc3849daf6845e3ec868087b755000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000011a000000000000000000000000000000000000000000000000000000000000022c00000000000000000000000000000000000000000000000000000000000000088000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000dd974d5c2e2928dea5f71b9825b8b646686bd20000000000000000000000000089d24a6b4ccb1b6faa2625fe562bdd9a23260359000000000000000000000000d26114cd6ee289accf82350c8d8487fedb8a0c07000000000000000000000000744d70fdbe2ba4cf95131626614a1763df805b9e000000000000000000000000bf2179859fc6d5bee9bf9158632dc51678a4100e000000000000000000000000595832f8fc6bf59c85c527fec3740a1b7a3612690000000000000000000000000f5d2fb29fb7d3cfee444a200298f468908cc9420000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef0000000000000000000000008f8221"

const decodedData = abiDecoder.decodeMethod(testData);

console.log(decodedData)